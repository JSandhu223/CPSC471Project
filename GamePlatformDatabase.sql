CREATE DATABASE GamePlatform;

CREATE TABLE user (
	UserID INT AUTO_INCREMENT NOT NULL,
    Fname VARCHAR(64) NOT NULL,
    Lname VARCHAR (64) NOT NULL,
    Email VARCHAR(64) UNIQUE NOT NULL,
    Password VARCHAR(64) NOT NULL,
    CONSTRAINT USER_PK
		PRIMARY KEY (UserID)
);

CREATE TABLE developer (
	Dname VARCHAR(64) NOT NULL,
    StartDate DATE NOT NULL,
    CONSTRAINT DEV_PK
		PRIMARY KEY (Dname)
);

CREATE TABLE administrator (
	AdminID	INT AUTO_INCREMENT NOT NULL,
    Fname VARCHAR(64) NOT NULL,
    Lname VARCHAR (64) NOT NULL,
    Email VARCHAR(64) UNIQUE NOT NULL,
    Password VARCHAR(64) NOT NULL,
    CONSTRAINT ADMIN_PK
		PRIMARY KEY (AdminID)
);

CREATE TABLE game (
	GameID INT AUTO_INCREMENT NOT NULL,
    Title VARCHAR(64) UNIQUE NOT NULL,
    -- Age rating can be E (for everyone), T (for teen), or M (for mature)
    AgeRating CHAR NOT NULL,
    ReleaseDate DATE NOT NULL,
    Price DECIMAL(5,2) NOT NULL,
    Dname VARCHAR(64) NOT NULL,
    CONSTRAINT RATING_CHECK CHECK (AgeRating LIKE 'E' OR AgeRating LIKE 'T' OR AgeRating LIKE 'M'),
    CONSTRAINT GAME_PK
		PRIMARY KEY (GameID),
    CONSTRAINT GAMEDEV_FK
		FOREIGN KEY (Dname) REFERENCES developer(Dname)
);

CREATE TABLE rating (
	RatingID INT AUTO_INCREMENT NOT NULL,
    -- A score out of 10. The range is 1-10
    Score INT DEFAULT NULL,
    UserID INT NOT NULL,
    GameID INT NOT NULL,
    CHECK (Score >= 1 AND Score <= 10),
    CONSTRAINT UQ_UserID_GameID
		UNIQUE (UserID, GameID),
    CONSTRAINT REVIEW_PK
		PRIMARY KEY (RatingID),
    CONSTRAINT REVIEWUSER_FK
		FOREIGN KEY (UserID) REFERENCES user(UserID),
	CONSTRAINT REVIEWGAME_FK
		FOREIGN KEY (GameID) REFERENCES game(GameID)
);

CREATE TABLE community_group (
	Gname VARCHAR(64) NOT NULL,
    MemCount INT DEFAULT 0 NOT NULL,
    GameID INT UNIQUE NOT NULL,
    CONSTRAINT GROUP_PK
		PRIMARY KEY (Gname),
    CONSTRAINT GROUPGAME_FK
		FOREIGN KEY (GameID) REFERENCES game(GameID)
);

CREATE TABLE profile (
    DisplayName VARCHAR(64) NOT NULL,
    UserID INT NOT NULL,
    FriendCount INT DEFAULT 0,
    CONSTRAINT PROFILE_PK
		PRIMARY KEY (ProfileName, UserID),
    CONSTRAINT PROFILEUSER_FK
		FOREIGN KEY (UserID) REFERENCES user(UserID)
);

CREATE TABLE purchase (
	UserID INT NOT NULL,
    GameID INT NOT NULL,
    CONSTRAINT PURCHASE_PK
		PRIMARY KEY (UserID, GameID),
    CONSTRAINT PURCHASEUSER_FK
		FOREIGN KEY (UserID) REFERENCES user(UserID),
    CONSTRAINT PURCHASEGAME_FK
		FOREIGN KEY (GameID) REFERENCES game(GameID)
);

CREATE TABLE evaluates (
	AdminID INT NOT NULL,
	GameID INT NOT NULL,
    Is_approved BOOLEAN DEFAULT NULL,
    CONSTRAINT EVAULUATE_PK
		PRIMARY KEY (AdminID, GameID),
    CONSTRAINT EVALUATEADMIN_FK
		FOREIGN KEY (AdminID) REFERENCES administrator(AdminID),
    CONSTRAINT EVALUATEGAME_FK
		FOREIGN KEY (GameID) REFERENCES game(GameID)
);

CREATE TABLE friends_with (
	UserA INT NOT NULL,
    UserB INT NOT NULL,
    CHECK (UserA <> UserB),
    CONSTRAINT USER_PK
		PRIMARY KEY (UserA, UserB),
	CONSTRAINT USERA_FK
		FOREIGN KEY (UserA) REFERENCES user(UserID),
    CONSTRAINT USERB_FK
		FOREIGN KEY (UserB) REFERENCES user(UserID)
);

CREATE TABLE library (
    LibraryID INT NOT NULL AUTO_INCREMENT,
    UserID INT NOT NULL,
    GameCount INT DEFAULT 0 NOT NULL,
    CONSTRAINT LIBRARY_PK
		PRIMARY KEY (LibraryID, UserID),
    CONSTRAINT LIBRARYUSER_FK
		FOREIGN KEY (UserID) REFERENCES user(UserID)
) AUTO_INCREMENT=1000;

CREATE TABLE belong_to (
	LibraryID INT NOT NULL,
    GameID INT NOT NULL,
    CONSTRAINT BELONGTO_PK
		PRIMARY KEY (LibraryID, GameID),
	CONSTRAINT BELONGTOLIBRARY_FK
		FOREIGN KEY (LibraryID) REFERENCES library(LibraryID),
    CONSTRAINT BELONGTOGAME_FK
		FOREIGN KEY (GameID) REFERENCES game(GameID)
);

CREATE TABLE cart (
	CartID INT NOT NULL AUTO_INCREMENT,
	UserID INT NOT NULL,
    NumItems INT DEFAULT 0 NOT NULL,
    CONSTRAINT CART_PK
		PRIMARY KEY (CartID, UserID),
	CONSTRAINT CARTUSER_FK
		FOREIGN KEY (UserID) REFERENCES user(UserID)
) AUTO_INCREMENT=1000;

CREATE TABLE added_to (
	CartID INT NOT NULL,
    GameID INT NOT NULL,
    CONSTRAINT ADDEDTO_PK
		PRIMARY KEY (CartID, GameID),
    CONSTRAINT ADDEDTOCART_FK
		FOREIGN KEY (CartID) REFERENCES cart(CartID),
	CONSTRAINT ADDEDTOGAME_FK
		FOREIGN KEY (GameID) REFERENCES game(GameID)
);

CREATE TABLE member (
	UserID INT NOT NULL,
    Gname VARCHAR(64) NOT NULL,
    CONSTRAINT MEMBER_PK
		PRIMARY KEY (UserID, Gname),
    CONSTRAINT MEMBERUSER_FK
		FOREIGN KEY (UserID) REFERENCES user(UserID),
    CONSTRAINT MEMBERGNAME_FK
		FOREIGN KEY (Gname) REFERENCES community_group(Gname)
);